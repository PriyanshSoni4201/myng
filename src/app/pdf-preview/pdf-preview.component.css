/* Using ::ng-deep because the content is dynamically injected */
:host ::ng-deep * {
  box-sizing: border-box;
}

.generator-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: #e9e9e9;
}

.toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  border-bottom: 1px solid #d0d0d0;
  background-color: #f8f8f8;
  flex-shrink: 0;
}

.toolbar h2 {
  margin: 0;
  font-size: 1.2rem;
}

.preview-area {
  flex-grow: 1;
  padding: 20px;
  overflow: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.preview-page-container {
  margin-bottom: 20px;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.page-number {
  font-family: sans-serif;
  color: #555;
  margin-bottom: 8px;
  font-size: 0.9rem;
}

.preview-document-sizer {
  width: 100%;
  max-width: 700px;
  aspect-ratio: var(--page-aspect-ratio, 1 / 1.4142);
  border: 1px solid #b0b0b0;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  background-color: #ffffff;
  overflow: hidden;

  /* The background image is applied here via CSS variable */
  background-image: var(--page-bg-image);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.preview-document-content {
  width: 100%;
  height: 100%;
  overflow: hidden; /* Content should not scroll within a single page */
  padding-top: var(--page-padding-top);
  padding-right: var(--page-padding-right);
  padding-bottom: var(--page-padding-bottom);
  padding-left: var(--page-padding-left);
}
